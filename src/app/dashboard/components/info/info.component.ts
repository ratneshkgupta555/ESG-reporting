import { Component, OnInit } from '@angular/core';
import { INPUT } from '../../shared/constant';
import { MatSnackBar } from '@angular/material/snack-bar';
import { MatProgressSpinner } from '@angular/material/progress-spinner';
import {MatTableDataSource} from '@angular/material/table';
import { API_URL } from 'src/app/services/serviceconstant';
import { ApiService } from 'src/app/services/api.service';

const dummyResponse = [
  {
    documentName: 'TestDoc',documentType: 'PDF',
    referenceLink: 'test link', generatedBy: 'userid1', reportYear: 2011
  },
  {
    documentName: 'DummyDoc',documentType: 'PDF',
    referenceLink: 'test link', generatedBy: 'userid11', reportYear: 2011
  },
  {
    documentName: 'XYXDOC',documentType: 'PDF',
    referenceLink: 'test link', generatedBy: 'userid21', reportYear: 2012
  },
  {
    documentName: 'TestDoc2',documentType: 'PDF',
    referenceLink: 'test link', generatedBy: 'userid10', reportYear: 2023
  }
]
@Component({
  selector: 'app-info',
  templateUrl: './info.component.html',
  styleUrls: ['./info.component.scss']
})
export class InfoComponent implements OnInit {
  minYear = INPUT.MIN_YEAR;
  maxYear = INPUT.MAX_YEAR;
  loading = false;
  yearOfReport = null;
  // displayedColumns = [
  //   { name : 'documentName', label: 'Document Name'},
  //   { name : 'documentType', label: 'Document Type'},
  //   { name : 'referenceLink', label: 'reference Link'},
  //   { name : 'generatedBy', label: 'Generated By'},
  //   { name : 'reportYear', label: 'Report Year'},
  // ];
  displayedColumns = ['documentName','documentType', 'referenceLink', 'generatedBy', 'reportYear'];
  dataSource = new MatTableDataSource<any>([]);

  constructor(
    private snackBar: MatSnackBar,
    private apiService: ApiService
  ) { }

  ngOnInit(): void {
  }

  onRetriveClick() {

    this.apiService.getAPI(API_URL.RETRIEVE_ALL_REPORTS).subscribe({
      next: (response: any) => {
        this.dataSource.data = response || dummyResponse;
        this.snackBar.open('Reports upload successfully !', 'success', {
          duration: 3000
        });
      }, error: (err: any) => {
        
      }
    })
    this.loading = true;
  }
}
